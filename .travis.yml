language: c++
dist: trusty
cache:
  ccache: true

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - george-edison55-precise-backports # more recent CMake

    packages:
    - gcc-4.9
    - g++-4.9
    - gcc-4.9-multilib
    - g++-4.9-multilib
    - gcc-multilib
    - g++-multilib
    - libedit2
    - libedit-dev
    - libcurl3:i386
    - ninja-build

before_install:
  # cmake install
  # - if [ ! -e "cmake-3.8.1" ]; then
  #    wget https://cmake.org/files/v3.8/cmake-3.8.1.tar.gz
  #    tar xf cmake-3.8.1.tar.gz
  #  fi

  - export PATH=$HOME/cmake/bin:$PATH
  - export PATH=$HOME/cmake/:$PATH

  - if ! [[ $(cmake --version | grep "3.8.1") ]]; then
        mkdir $HOME/cmake -p;
        wget https://cmake.org/files/v3.8/cmake-3.8.1.tar.gz;
        tar xf cmake-3.8.1.tar.gz;
        cd cmake-3.8.1;
        ./bootstrap --prefix=$HOME/cmake;
        make -j4 install;
    fi
  - echo 'CMake version is:'
  - echo cmake --version

  - echo $PATH

  # LLVM + Polly clone
  - cd $HOME
  - git clone https://github.com/llvm-mirror/llvm.git
  - cd llvm/tools
  - git clone https://github.com/llvm-mirror/polly.git
  - cd ../../
  
  - mkdir llvm_build
  - cd llvm_build

script:
  - cmake --version
  - cmake ../llvm -GNinja -DPOLLY_ENABLE_GPGPU_CODEGEN=ON -DBUILD_SHARED_LIBS=ON
  - ninja lib/Analysis/all
  - ninja lib/AsmParser/all
  - ninja lib/Bitcode/al
  - ninja lib/Bitcode/Reader/all
  - ninja lib/Bitcode/Writer/all
  - ninja lib/CodeGen/all
  - ninja lib/CodeGen/AsmPrinter/all
  - ninja lib/CodeGen/GlobalISel/all
  - ninja lib/CodeGen/MIRParser/all
  - ninja lib/CodeGen/SelectionDAG/all
  - ninja opt
  - ninja check-polly
  

# NOTES:
# 1. spends more time `cmake`ing than anything else for the cmake bootstrap process
# 2. ccache = awesome
